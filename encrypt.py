# Модуль выполнил Косов А.А.
from PIL import Image, ImageDraw #Загрузка требуемых библиотек


def stega_encrypt(): #Создание функции
    img = Image.open(input("path to image: ")) #Создание переменной изображения
    drw = ImageDraw.Draw(img) #Создание пишущего пера
    wdt = img.size[0] #Переменная ширины изображения
    hgt = img.size[1] #Переменная высоты изображения
    pix = img.load() #Загрузка данных пикселя изображения
    x=0 #Координата x пикселя
    y=0 #Координата y пикселя
    lgh=0 #Переменная счетчик длины изображения
    try:
        for elem in ([ord(elem) for elem in input("secret message: ")]): #Ввод сообщения и цикл по символам
            bi = bin(elem) #Перевод в двоичную систему счисления
            bi = bi[2:] #Перевод в двоичную систему счисления
            oc = '0' * (8 - len(bi)) + bi #Преобразование в 8-битный вид
            lgh += 1 #Прибавление счетчика
            for k in oc: #Цикл встраивания
                r, g = pix[x, y][0:2] #Запоминание исходных цветовых каналов красный и зеленый
                b = pix[x, y][2] #Получение синего цветового канала
                b = bin(b) #Перевод в двоичную систему счисления
                b = b[2:(len(b) - 1)] + k #Изменение последнего бита
                b = int(b, 2) #Перевод в десятичную систему счисления
                drw.point((x, y), (r, g, b)) #Рисование измененного пикселя
                x += 1 #Прибавление координаты
                if x >= wdt: #Переход на новую строку пикселей
                    x = 0
                    y += 1
        print("Message lenght: ", lgh) #Вывод длины сообщения
    except IndexError: #Ошибка
        print('Error! The message size exceeds the allowed size.')
    img.save("2.png", "PNG") #Сохранение нового изображения


stega_encrypt()

